on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Log in to GitHub Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract metadata for tags
        id: meta
        run: |
          # Default to short SHA
          SHORT_SHA=$(git rev-parse --short=7 ${{ github.sha }})
          # Initialize tag list
          TAGS="ghcr.io/${{ github.repository }}:latest"

          # Handle push to main
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAGS="ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:main-${SHORT_SHA}"
          # Handle push to version tags (e.g., v1.0.0)
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            TAGS="ghcr.io/${{ github.repository }}:${VERSION},ghcr.io/${{ github.repository }}:latest"
          # Handle pull requests
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_NUMBER=$(echo ${{ github.event.pull_request.number }})
            TAGS="ghcr.io/${{ github.repository }}:pr-${PR_NUMBER}-${SHORT_SHA}"
          fi

          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Build and Push to Multiple Registries
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: ./yarp/.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
